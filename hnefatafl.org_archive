#    -*- mode: org -*-


Archived entries from file /home/matt/dev/hnefatafl/hnefatafl.org


* DONE make cornerGuard AI function not depend on lastmove, just look at board
       CLOSED: [2017-01-11 Wed 19:25]
       :PROPERTIES:
       :ARCHIVE_TIME: 2017-03-13 Mon 17:51
       :ARCHIVE_FILE: ~/dev/hnefatafl/hnefatafl.org
       :ARCHIVE_OLPATH: AI/General/Board evaluation/Black/cornerGuard
       :ARCHIVE_CATEGORY: hnefatafl
       :ARCHIVE_TODO: DONE
       :END:

* DONE was the piece in danger where it was
       CLOSED: [2017-01-11 Wed 19:39]
       :PROPERTIES:
       :ARCHIVE_TIME: 2017-03-13 Mon 18:41
       :ARCHIVE_FILE: ~/dev/hnefatafl/hnefatafl.org
       :ARCHIVE_OLPATH: AI/General/Board evaluation/General/functions to assess changed risk to pieces affected by the last move
       :ARCHIVE_CATEGORY: hnefatafl
       :ARCHIVE_TODO: DONE
       :END:
       tweak this to make sure that when the king is blocked from the corner by a corner adjacent defender
       and then moves out by just one square, the corner adjacent defender moves out as well to block instead
       of bringing in a new piece, because otherwise the king will just move back and kill the original defender.
       in practical terms this will mean scoring moving a (corner adjacent) carefully against king stoppage.
       On second thought, this might be more easily solved by simply looking ahead one move, either usign MCTS or
       a more basic manual lookahead of the best moves.

* DONE is the piece in danger where it is now
       CLOSED: [2017-01-11 Wed 19:39]
       :PROPERTIES:
       :ARCHIVE_TIME: 2017-03-13 Mon 18:41
       :ARCHIVE_FILE: ~/dev/hnefatafl/hnefatafl.org
       :ARCHIVE_OLPATH: AI/General/Board evaluation/General/functions to assess changed risk to pieces affected by the last move
       :ARCHIVE_CATEGORY: hnefatafl
       :ARCHIVE_TODO: DONE
       :END:
       already have a function for this, make sure it is in step so that there isn't a net positive for moving from
       risk to risk for example
       
